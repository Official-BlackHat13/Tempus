Use Batchdd.pkg
Use cComChilkatMailMan.pkg
Use Customer.DD
Use Areas.DD
Use cSalesTaxGroupGlblDataDictionary.dd
Use Location.DD
Use SalesRep.DD
Use Order.DD
Use cDivisionMgrGlblDataDictionary.dd
Use cWorkTypeGlblDataDictionary.dd
Use MastOps.DD
Use cOrderDtlGlblDataDictionary.dd
//

Object oOrderEmailNotification is a BusinessProcess
    
    Property Integer piJobNumber
    Property Boolean pbNew
    
    Object oDivisionMgr_DD is a cDivisionMgrGlblDataDictionary
    End_Object

    Object oWorkType_DD is a cWorkTypeGlblDataDictionary
        Set DDO_Server to oDivisionMgr_DD
    End_Object

    Object oMastOps_DD is a Mastops_DataDictionary
        Set DDO_Server to oWorkType_DD
    End_Object

    Object oSalesRep_DD is a Salesrep_DataDictionary
    End_Object

    Object oSalesTaxGroup_DD is a cSalesTaxGroupGlblDataDictionary
    End_Object

    Object oAreas_DD is a Areas_DataDictionary
    End_Object

    Object oCustomer_DD is a Customer_DataDictionary
    End_Object

    Object oLocation_DD is a Location_DataDictionary
        Set DDO_Server to oSalesTaxGroup_DD
        Set DDO_Server to oAreas_DD
        Set DDO_Server to oCustomer_DD
    End_Object

    Object oOrder_DD is a Order_DataDictionary
        Set DDO_Server to oSalesRep_DD
        Set DDO_Server to oLocation_DD
    End_Object

    Object oOrderDtl_DD is a cOrderDtlGlblDataDictionary
        Set DDO_Server to oMastOps_DD
        Set DDO_Server to oOrder_DD
    End_Object

    Set Main_DD to oOrderDtl_DD
    Set Process_Title to "Sending Email Notification"
            
    Object oChilkatMailMan is a cComChilkatMailMan
        
        Function InitMail Handle ByRef hoMailman Handle ByRef hoEmail Returns Integer
            Integer iSuccess
            //  Create a MailMan for the purpose
            //  of unlocking the component.
            Get Create (RefClass(cComChilkatMailMan)) to hoMailman
            If (not(IsComObjectCreated(hoMailman))) Begin
                Send CreateComObject of hoMailman
            End
            Get ComUnlockComponent of hoMailman "INTERSMAILQ_EtgQk9ew6R0M" to iSuccess
            
            Get Create (RefClass(cComChilkatEmail)) to hoEmail
            If (not(IsComObjectCreated(hoEmail))) Begin
                Send CreateComObject of hoEmail
            End
      
            Function_Return iSuccess
        End_Function
    
    End_Object
    

    // Send DoProcess to this BPO to start the business process
    // DoProcess is a predefined method in the BusinessProcess class
    // Send DoProcess of oNewBusinessProcess

    // OnProcess
    // ---------
    // Place your processing code into Procedure OnProcess
    // OnProcess is a predefined method in the BusinessProcess class

    Procedure OnProcess Boolean ByRef bSuccess
        Boolean bNewRecord bTemp1
        String sFrom sTo sCC sBCC sSubject sHTML_Message sRepIdno sSalesRep sSalesRepEmail sSalesRepPhone sOrderStatus
        String sProgramPath sHomePath sJobSheetPDFFilePath sOrderDtlPDFFilePath sErrorLog sErrorText
        String sContentType sTemp1 
        Handle  hoDD hoMailman hoEmail
        Variant vNewMail
        Integer iJobNumber iOrderDtlCount iJobCount iIsOk iRetval iSuccess
        //
        Get piJobNumber to iJobNumber
        Get pbNew to bNewRecord
        //
        Set Main_DD         to oOrderDtl_DD
        Get Main_DD         to hoDD
        Send Clear_All      of hoDD
        //
        Move iJobNumber to OrderDtl.JobNumber
        Send Request_Find of hoDD GE OrderDtl.File_Number 3
        While ((Found) and OrderDtl.JobNumber = iJobNumber)
            If (iOrderDtlCount=0) Begin
                //First time around, initialize Chilkat, collect and create email Header information
                Get psProgramPath of (phoWorkspace(ghoApplication)) to sProgramPath
                Move (sProgramPath + "\ChilkatErrorLog.txt")        to sErrorLog
                Get psHome of (phoWorkspace(ghoApplication)) to sHomePath
                Move (sHomePath+"Reports\Cache\Job#"+String(iJobNumber)+"-JobSheet.pdf") to sJobSheetPDFFilePath
                Move (sHomePath+"Reports\Cache\Job#"+String(iJobNumber)+"-OrderDetail.pdf") to sOrderDtlPDFFilePath
                Get InitMail of oChilkatMailMan (&hoMailman) (&hoEmail) to iIsOk
                If (iIsOk) Begin
                    //SMTP Server Settings
                    Set ComSmtpHost     of hoMailman to "smtp.office365.com"            // "smtp.office365.com" // "mail.interstatepm.com" //"64.122.223.194"
                    Set ComSmtpPort     of hoMailman to 587                             // "25"
                    Set ComStartTls     of hoMailman to True
                    //Login Info
                    Set ComSmtpUsername of hoMailman to "interstate@interstatepm.com"   // ""
                    Set ComSmtpPassword of hoMailman to "IC_Adm#2016!"                  // ""
                    //Prepare email to recipients
                    // - FROM
                    Move ("dispatch@interstatepm.com") to sFrom
                    If (Length(Trim(sFrom))=0) Begin
                        Move (Trim(System.SMTP_MailFrom)) to sFrom //If nothing is set, it goes out as dispatch@interstatepm.com
                    End
                    Set ComFrom of hoEmail to sFrom
                    // - SUBJECT
                    Move (If(bNewRecord,"NEW ORDER","Update to Order")*"| Job#:"*String(Order.JobNumber)*"|"*Trim(Order.Title)) to sSubject
                    Set ComSubject of hoEmail to sSubject
                    // - FILE ATTACHMENTS
                    Get ComAddFileAttachment of hoEmail sJobSheetPDFFilePath to sContentType
                    Get ComLastMethodSuccess of hoEmail to bTemp1
                    If (bTemp1 <> True) Begin
                        Get ComLastErrorText of hoEmail to sTemp1
                        Showln sTemp1
                    End
                    Get ComAddFileAttachment of hoEmail sOrderDtlPDFFilePath to sContentType
                    Get ComLastMethodSuccess of hoEmail to bTemp1
                    If (bTemp1 <> True) Begin
                        Get ComLastErrorText of hoEmail to sTemp1
                        Showln sTemp1
                    End
                    
                    // - BODY
                    Move (String(SalesRep.RepIdno)) to sRepIdno
                    Move (Trim(SalesRep.FirstName)*Trim(SalesRep.LastName)) to sSalesRep
                    Move (Trim(SalesRep.EmailAddress)) to sSalesRepEmail
                    Move (SalesRep.Phone2) to sSalesRepPhone
                    Move (Order.Status) to sOrderStatus
                    // Create the HTML Header of the email into an HTML form
                    Move "<html><body style='font-family:Segoe UI; font-size:12px'>" to sHTML_Message
                    Append sHTML_Message ("NEW Order from<b>"*sSalesRep *"</b>for<b>"*(Trim(Customer.Name))*"</b>at<b>"*(Trim(Location.Name))*"</b>titled Job#<b>"*(String(Order.JobNumber))*"<b>|</b>"*Trim(Order.Title)*"<br><br>")
                    Append sHTML_Message ("<table border='0' cellpadding='1' cellspacing='1' style='font-family:Segoe UI; font-size:12px'>")
                    Append sHTML_Message ("<tbody>")
                    Append sHTML_Message ("<tr>")
                    Append sHTML_Message ("<td colspan='2' style='background-color:#D3D3D3; width:400px'><strong><b>Job#</b>"*String(iJobNumber)*"|"*Trim(Customer.Name)*"|"*Trim(Location.Name)*"</strong></td>")
                    //Append sHTML_Message ("<td style='background-color:#D3D3D3; width:50px'><strong>Division Info</strong></td>")
                    Append sHTML_Message ("</tr>")                
                End
            End
            
            //IMPORTANT to add the emaild address of every the Division Manager for each OrderDetail line item to the recipient list
            //Get ComAddTo of hoEmail (Trim(DivisionMgr.FirstName)*Trim(DivisionMgr.LastName)) (Trim(DivisionMgr.Email)) to iRetval
            If (not(sTo contains Trim(DivisionMgr.Email))) Begin
                Append sTo (Trim(DivisionMgr.FirstName)*Trim(DivisionMgr.LastName)*"<"+(Trim(DivisionMgr.Email))+">,")
            End
            // If the work is to be done by a subcontractor, ad Kristin to the "To" recipient list
            If (OrderDtl.SubOnlyFlag=1 and (not(sTo contains 'kristin@interstatepm.com'))) Begin
               Append sTo ("Kristin Larson"*"<kristin@interstatepm.com>") 
            End
            // continue with creating email body with brief OrderDetails
            Append sHTML_Message ("<tr>")
            Append sHTML_Message ("<td style='width:10px'><center>-</center></td>")
            Append sHTML_Message ("<td colspan='2'><b>"*Trim(WorkType.Description)*"|"*(Trim(DivisionMgr.FirstName)*Trim(DivisionMgr.LastName))*"|"*(Trim(DivisionMgr.Email))*"|"*(Trim(DivisionMgr.CellPhone))*"</b></td>")
            Append sHTML_Message ("</tr>")
            Append sHTML_Message ("<tr>")
            Append sHTML_Message ("<td style='width:10px'></td>")
            Append sHTML_Message ("<td><b>D:</b>"*Trim(OrderDtl.InvoiceDescription)*"<br><b>I:</b><i>"*Trim(OrderDtl.Instructions)*"</i></td>")
            Append sHTML_Message ("</tr>")
            Append sHTML_Message ("<tr><td colspan='2'><hr></td></tr>")
            // Increment count and on to the next record
            Increment iOrderDtlCount
            //Find GT OrderDtl by 3
            Send Request_Find of oOrderDtl_DD GT OrderDtl.File_Number 3
        Loop
        // Closing the Table
        Append sHTML_Message ("</tbody>")
        Append sHTML_Message ("</table>")
        Append sHTML_Message ("<br>")
        Append sHTML_Message ("<b>"*sSalesRep*"</b><br>")
        Append sHTML_Message (sSalesRepEmail*"<br>")
        Append sHTML_Message (sSalesRepPhone*"<br>")
        // Adding Jill, Kristin and Ben as default recipients
        //Get ComAddCC of hoEmail "Jill Barger" "jill@interstatepm.com" to iRetval
        Get ComAddMultipleTo of hoEmail sTo to iRetval
        Get ComAddCC of hoEmail sSalesRep sSalesRepEmail to iRetval // SalesRep CC
        If (sRepIdno='113') Begin // Add Kevin's assistant's email
            Get ComAddBcc of hoEmail "Katie Colombo" "katie@interstatepm.com" to iRetval
        End
        Get ComAddBcc of hoEmail "Kristin Larson" "kristin@interstatepm.com" to iRetval // temporary for monitoring and auditing
        Get ComAddBcc of hoEmail "Dispatch" "dispatch@interstatepm.com" to iRetval // for monitoring and auditing
        //
        Send ComSetHtmlBody   of hoEmail sHTML_Message

        Get pvComObject of hoEmail to vNewMail
        Get ComSendEmail of hoMailman vNewMail to iSuccess           //Send it (finally)
        If (iSuccess <> True) Begin
            Get ComLastErrorText of hoMailman to sErrorText
            Append_Output sErrorLog
            Writeln ("Job#"*String(iJobNumber))
            Writeln sErrorText
            Close_Output
            Move (False) to bSuccess
        End
        Else Begin
            Move (True) to bSuccess
        End
        
        Get ComCloseSmtpConnection of hoMailman to iSuccess
        If (iSuccess <> True) Begin
            Append_Output sErrorLog
            Writeln "Connection to SMTP server not closed cleanly."
            Close_Output
        End
        Append_Output sErrorLog
        Writeln ("Mail Sent for Job#:"*String(iJobNumber))
        //
        Send Request_Clear_All of hoDD
        Move iJobNumber to OrderDtl.JobNumber
        Send Request_Find of hoDD GE OrderDtl.File_Number 3
        //
    End_Procedure

    Function DoSendOrderEmailNotification Integer iJobNumber Boolean bNewRecord Returns Boolean
        Boolean bSuccess
        //
        Set piJobNumber to iJobNumber
        Set pbNew to bNewRecord
        //
        Send DoProcess (&bSuccess)
        
        Function_Return bSuccess
    End_Function

End_Object



