Use Windows.pkg
//Use cCJGrid.pkg
Use cGlblDbModalPanel.pkg
Use cCJGridPromptList.pkg
Use cCJGridColumn.pkg

Object oUserMultiSelectionDialog is a ModalPanel
    Set Size to 113 211
    Set Label to "UserMultiSelectionDialog"
    Set piMinSize to 89 211
    Set Location to 2 2
    Set Border_Style to Border_Thick
    
    Property String[]   psItemName
    Property String     psTableName
    Property Integer    piIndex
    Property Boolean    pbCancel

    Object oOK_Btn is a Button
        Set Label    to "&OK"
        Set Location to 95 102
        Set peAnchors To anBottomRight

        Procedure OnClick
            Send ProcessSelectionItems of oMultiSelectGrid
            Set pbCancel to False
            Send Close_Panel
        End_Procedure

    End_Object

    Object oCancel_Btn is a Button
        Set Label    to "&Cancel"
        Set Location to 95 157
        Set peAnchors to anBottomRight

        Procedure OnClick
            Set pbCancel to True
            Send Close_Panel
        End_Procedure

    End_Object

    Object oMultiSelectGrid is a cCJGridPromptList
        Set Size to 86 201
        Set Location to 4 5
        Set peAnchors to anAll

        Set pbMultipleSelection to True
        Set peUpdateMode to umPromptCustom
        Set pbMultiSelectionMode to True
        Set pbHeaderReorders to False
        Set pbHeaderTogglesDirection to False
        Set pbAutoOrdering to False
        Set piInitialColumn to 0
        Set piSortColumn    to 0
        Set pbEditOnTyping to False
        Set pbAutoSearch to False
        Set pbInitialSelectionEnable to False

        Object oItemNameColumn is a cCJGridColumn
            Set piWidth to 223
            Set psCaption to "Name"
        End_Object
        
        Procedure LoadData 
            Handle hoDataSource
            tDataSourceRow[] TheData
            Integer iRows iName iStatus iElementCount iIndex
            String sTableName
            String[] sItemName
            //
            Get phoDataSource to hoDataSource
            Move 0 to iRows
//            Move "" to sItemName
//            Move "" to sTableName
//            Get psItemName to sItemName
//            Get psTableName to sTableName
//            If (Length(sItemName)>1) Begin
//                //USE ARRAY
//                Move (SizeOfArray(sItemName)-1) to iElementCount
//                // Get the datasource indexes of the various columns
//                Get piColumnId of oItemNameColumn to iName
//                // Load all data into the datasource array
//                For iRows from 0 to iElementCount
//                    Move (sItemName[iRows]) to TheData[iRows].sValue[iName] 
//                Loop                
//            End
//            
//            Else If (Length(sTableName)>1) Begin
//                // Use Table instead
                Open WorkType
                Clear WorkType
                Find ge WorkType by 1
                While (Found) 
                    Move WorkType.Description to TheData[iRows].sValue[iName] 
                    Find gt WorkType by 1
                    Increment iRows
                Loop
//            End
            // Load all data into the datasource array

            
            // Initialize Grid with new data
            Send InitializeData TheData
            Send MovetoFirstRow
        End_Procedure
    
        Procedure ProcessSelectionItems
            Integer[] SelRows
            Integer i iSels iRow
            String sName
            String[] sItemSelection
            Handle hoDataSource
            tDataSourceRow[] MyData
        
            Get GetIndexesForSelectedRows to SelRows
            Get phoDataSource to hoDataSource
            Get DataSource of hoDataSource to MyData
            Move (SizeOfArray(SelRows)) to iSels
            For i from 0 to (iSels-1)
                Move SelRows[i] to iRow
                Move MyData[iRow].sValue[0] to sName
                Move sName to sItemSelection[i]
            Loop
            Set psItemName to sItemSelection
        End_Procedure

    Procedure Activating
        Forward Send Activating
        // Populate Grid
        Send LoadData
    End_Procedure

    End_Object

    Function PopupUserMultiSelectTable String sTitle String[] ByRef sItemSelection Returns Boolean
        Boolean bCancel
        //
        Set Label of oUserMultiSelectionDialog to sTitle
        //
        Send Popup_Modal of Self
        //
        Get pbCancel to bCancel
        If not bCancel Begin
            Get psItemName to  sItemSelection
            Function_Return True
        End
        //
        Function_Return False
    End_Function

    Function PopupUserMultiSelect String sTitle String[] sItemName Returns String[]
        String[] sItemSelection
        //
        Set Label of oUserMultiSelectionDialog to sTitle
        Set psItemName to sItemName
        //
        Send Popup_Modal of Self
        //
        Get psItemName to  sItemSelection
        //
        Function_Return sItemSelection
    End_Function



    On_Key Key_Alt+Key_O Send KeyAction of oOK_Btn
    On_Key Key_Alt+Key_C Send KeyAction of oCancel_Btn

End_Object
